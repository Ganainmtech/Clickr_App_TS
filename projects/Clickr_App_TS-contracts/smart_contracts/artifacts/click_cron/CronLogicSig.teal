#pragma version 10
#pragma typetrack false

// smart_contracts/click_cron/contract.algo.ts::program() -> uint64:
main:
    // smart_contracts/click_cron/contract.algo.ts:22
    // Txn.typeEnum === TransactionType.Payment &&
    txn TypeEnum
    pushint 1 // 1
    ==
    // smart_contracts/click_cron/contract.algo.ts:22-23
    // Txn.typeEnum === TransactionType.Payment &&
    // Txn.amount === 0 && // Self-payment with zero amount
    bz main_bool_false@7
    // smart_contracts/click_cron/contract.algo.ts:23
    // Txn.amount === 0 && // Self-payment with zero amount
    txn Amount
    // smart_contracts/click_cron/contract.algo.ts:22-23
    // Txn.typeEnum === TransactionType.Payment &&
    // Txn.amount === 0 && // Self-payment with zero amount
    bnz main_bool_false@7
    // smart_contracts/click_cron/contract.algo.ts:24
    // Txn.receiver === Txn.sender && // Ensure it's sending to itself
    txn Receiver
    txn Sender
    ==
    // smart_contracts/click_cron/contract.algo.ts:22-24
    // Txn.typeEnum === TransactionType.Payment &&
    // Txn.amount === 0 && // Self-payment with zero amount
    // Txn.receiver === Txn.sender && // Ensure it's sending to itself
    bz main_bool_false@7
    // smart_contracts/click_cron/contract.algo.ts:25
    // Txn.rekeyTo === Global.zeroAddress && // Prevent rekeying
    txn RekeyTo
    global ZeroAddress
    ==
    // smart_contracts/click_cron/contract.algo.ts:22-25
    // Txn.typeEnum === TransactionType.Payment &&
    // Txn.amount === 0 && // Self-payment with zero amount
    // Txn.receiver === Txn.sender && // Ensure it's sending to itself
    // Txn.rekeyTo === Global.zeroAddress && // Prevent rekeying
    bz main_bool_false@7
    // smart_contracts/click_cron/contract.algo.ts:26
    // Txn.closeRemainderTo === Global.zeroAddress && // Prevent closing
    txn CloseRemainderTo
    global ZeroAddress
    ==
    // smart_contracts/click_cron/contract.algo.ts:22-26
    // Txn.typeEnum === TransactionType.Payment &&
    // Txn.amount === 0 && // Self-payment with zero amount
    // Txn.receiver === Txn.sender && // Ensure it's sending to itself
    // Txn.rekeyTo === Global.zeroAddress && // Prevent rekeying
    // Txn.closeRemainderTo === Global.zeroAddress && // Prevent closing
    bz main_bool_false@7
    // smart_contracts/click_cron/contract.algo.ts:27
    // Txn.fee === Global.minTxnFee // Ensure minimum fee
    txn Fee
    global MinTxnFee
    ==
    // smart_contracts/click_cron/contract.algo.ts:22-27
    // Txn.typeEnum === TransactionType.Payment &&
    // Txn.amount === 0 && // Self-payment with zero amount
    // Txn.receiver === Txn.sender && // Ensure it's sending to itself
    // Txn.rekeyTo === Global.zeroAddress && // Prevent rekeying
    // Txn.closeRemainderTo === Global.zeroAddress && // Prevent closing
    // Txn.fee === Global.minTxnFee // Ensure minimum fee
    bz main_bool_false@7
    pushint 1 // 1
    // smart_contracts/click_cron/contract.algo.ts:21-28
    // return (
    //   Txn.typeEnum === TransactionType.Payment &&
    //   Txn.amount === 0 && // Self-payment with zero amount
    //   Txn.receiver === Txn.sender && // Ensure it's sending to itself
    //   Txn.rekeyTo === Global.zeroAddress && // Prevent rekeying
    //   Txn.closeRemainderTo === Global.zeroAddress && // Prevent closing
    //   Txn.fee === Global.minTxnFee // Ensure minimum fee
    // );
    return

main_bool_false@7:
    pushint 0 // 0
    // smart_contracts/click_cron/contract.algo.ts:21-28
    // return (
    //   Txn.typeEnum === TransactionType.Payment &&
    //   Txn.amount === 0 && // Self-payment with zero amount
    //   Txn.receiver === Txn.sender && // Ensure it's sending to itself
    //   Txn.rekeyTo === Global.zeroAddress && // Prevent rekeying
    //   Txn.closeRemainderTo === Global.zeroAddress && // Prevent closing
    //   Txn.fee === Global.minTxnFee // Ensure minimum fee
    // );
    return

{
    "name": "clickrLogic",
    "structs": {},
    "methods": [
        {
            "name": "createApplication",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": []
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "optIn",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "OptIn"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "recordClick",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getClickCount",
            "args": [
                {
                    "type": "account",
                    "name": "user"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getHighestClickCount",
            "args": [
                {
                    "type": "account",
                    "name": "user"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getHeartCount",
            "args": [
                {
                    "type": "account",
                    "name": "user"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "clickProcessed",
            "args": [
                {
                    "type": "account",
                    "name": "user"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "decrementHeart",
            "args": [
                {
                    "type": "account",
                    "name": "user"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 3,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {
                "clickCount": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "bA=="
                },
                "heartCount": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "aA=="
                },
                "highestClickCount": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Yw=="
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        91,
                        109,
                        127,
                        150,
                        173,
                        196,
                        221
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        209
                    ],
                    "errorMessage": "OnCompletion is not OptIn"
                },
                {
                    "pc": [
                        261
                    ],
                    "errorMessage": "Only if user hearts are above 0 record click"
                },
                {
                    "pc": [
                        255
                    ],
                    "errorMessage": "Only the user can record a click"
                },
                {
                    "pc": [
                        437
                    ],
                    "errorMessage": "To decrement hearts there has to be atleast 1"
                },
                {
                    "pc": [
                        225
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        94,
                        112,
                        130,
                        153,
                        176,
                        199,
                        212
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        260,
                        269,
                        300,
                        324,
                        348,
                        375,
                        394,
                        436,
                        443
                    ],
                    "errorMessage": "check LocalState exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiACAAEmBAFsAWgBYwQVH3x1MRtBAD+CCAS4RHs2BCkxTZUE/WLGbQSeIPwmBCFmfoYE+69njwRZMzjaBFn72s42GgCOCACEAHcAawBUAD0AJgAUAAIiQzEZFEQxGEQ2GgEXwByIAUQjQzEZFEQxGEQ2GgEXwByIAO4jQzEZFEQxGEQ2GgEXwByIAMQWK0xQsCNDMRkURDEYRDYaARfAHIgAlRYrTFCwI0MxGRREMRhENhoBF8AciABmFitMULAjQzEZFEQxGESIACojQzEZIxJEMRhEiAAMI0MxGRREMRgURCNDMQAoImYxACmBBWYxACoiZomKAAAxAEcCSwESREkiKWNERCIoY0xJTwJEQQALiwEjCIsAKE8CZokiQv/zigEBi/8iKGNMSU8CREEABIsATIkiQv/6igEBi/8iKmNMSU8CREEABIsATIkiQv/6igEBi/8iKWNMSU8CREEABIsATIkiQv/6igEAgABJi/8iKGNMSU8CREEAK4sCjACL/yIqY0xJTgKMAURBABSLAYsADEEABov/KosAZov/KCJmiSJC/+oijABC/9OKAQCL/yIpY0REi/8iKWNEIwmL/ylPAmaJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 5,
            "patch": 3
        }
    },
    "events": [],
    "templateVariables": {}
}